\documentclass[12pt]{article}
\usepackage{Sweave}
\usepackage{hyperref}
\usepackage{booktabs}
\usepackage{longtable}

\usepackage[authoryear,round,comma]{natbib}
\bibliographystyle{apa}

%\VignetteIndexEntry{About the Sweavetest package}

% The next line is needed for inverse search...
\SweaveOpts{echo=TRUE,results=verbatim} % to show R code and results
\SweaveOpts{concordance=TRUE, keep.source=TRUE,echo=FALSE,results=tex}
<<>>=
options(width=60)
set.seed(18)
install.packages("~/git/Sweavetest/Sweavetest",type="source",repos=NULL)
library(Sweavetest)
randomize <- TRUE
testversion <- 1
newCommands(thesection=FALSE)
@

\newcommand{\pkg}[1]{{\fontseries{b}\selectfont #1}}

% These commands affect the display of the test samples
\newcommand{\Correct}{*}
\renewcommand{\labelenumii}{(\Alph{enumii})}

\title{The \pkg{Sweavetest} Package\footnote{This 
vignette  was built using \pkg{Sweavetest} version \Sexpr{packageDescription("Sweavetest")$Version}}.}%$

\author{Duncan Murdoch \and Adam Rahman}

\begin{document}

\maketitle

\abstract{

Multiple choice tests are used frequently to assess student
performance in large classes. The \pkg{Sweavetest} package
contains support functions to format, grade and analyze multiple
choice tests.  Answers are randomized during formatting,
and after grading a report is automatically generated, showing descriptive
statistics, measuring test reliability, and presenting item analysis.
Errors in answer keys and poorly worded questions are easily
recognized through the information generated. Several plots are also
created to visually show the instructor how well the students are
performing, and to help identify possible problem questions
and answer patterns that suggest cheating.
}


\tableofcontents

\section{Introduction}

The \pkg{Sweavetest} package is designed to support administration of multiple choice
tests.  It was written at the University of Western Ontario (UWO), and some aspects of the code
reflect the way we administer tests, but efforts have been made to make it more generally
useful.

There are four main parts to the package, described in the following sections.  First, a
number of functions are given to help an instructor prepare a test using Sweave \citep{Leisch2002}.
These are described in section \ref{sec:preparing}.  At UWO, the students use Scantron 
mark-sense sheets to record answers on multiple-choice tests; section \ref{sec:reading}
describes how these are handled in \pkg{Sweavetest}, producing grades for each student
and merging them into existing class lists.

An important part of testing is to analyze the results of a test.  This can detect badly
worded questions, errors in answer keys, and can otherwise give information about the
quality of the questions and of the test as a whole.  Section \ref{sec:analysis} describes
this aspect of \pkg{Sweavetest}.  It may also be possible to use the aggregate results
to detect cheating by individual students; section \ref{sec:cheating} describes how this is done.
This paper finishes with a short discussion of plans for changes to \pkg{Sweavetest}.


\section{Preparing a Test}
\label{sec:preparing}

\pkg{Sweavetest} was originally designed to support writing multiple choice tests in Sweave
and \LaTeX.  There are functions that output introductory material at the start of the
test, as well as functions that format and randomize the answers.  These functions also
record the results of the randomization so that an answer key can be produced automatically
at the end.

Using the test preparation functions requires knowledge of Sweave and \LaTeX.  Instructors
who want to use other document preparation systems to produce the test can skip this section,
but some of the work done here automatically will have to be done manually later.

\subsection{Writing questions}
\label{sec:questions}

The functions to randomize answers all work on the responses to questions; the question text
itself is not important, but it is assumed that all questions have multiple choice responses.  See below for how to handle tests where some questions are in other formats.

\pkg{Sweavetest} supports four separate versions of each test; questions
may contain from 2 to 5 answers.  The preamble to the test randomizes the test version
numbers to be 4  numbers from 100 to 999 in sorted order.  Version 1 of the test has the smallest 
test version number, version 4 the largest.

The supplied functions do the work of formatting the answers.   For example,
\begin{verbatim}
 \item Let $U \sim \Unif(0,1)$.  Set $X$ equal to 0 if 
 $U > 0.3$, equal to 1 otherwise.  The distribution of 
 $X$ is
 <<>>=
 enumerate("Binomial$(n=1, p=0.7)$", 
      "Binomial$(n=1, p=0.3)$",
      "Poisson$(\\mu = 0.3)$",
      "Poisson$(\\mu = 0.7)$",
      "Exponential$(\\lambda=0.3)$",
      Correct=2)
 @
 \end{verbatim}
The \verb!enumerate()! function produces
an enumeration environment in \LaTeX.  The answers are displayed in a random order.  Earlier in the text, we've used
\begin{verbatim}
 \newcommand{\Correct}{*}
 \renewcommand{\labelenumii}{(\Alph{enumii})}
\end{verbatim}
so that the correct answer is marked with an asterisk, and the answers are labelled with 
capital letters.  (We wouldn't label the correct answer on the version of the test we give to 
students!)  We also used \verb!\SweaveOpts{echo=FALSE,results=tex}! earlier to set the defaults
to output \LaTeX\ code without echoing the input.   With this preparation, the Sweave code listed
above will be processed and displayed as
\begin{enumerate}
\item Let $U \sim \Unif(0,1)$.  Set $X$ equal to 0 if $U > 0.3$, equal to 1 otherwise.  The
distribution of $X$ is
<<>>=
enumerate("$\\Binom(n=1, p=0.7)$", 
      "$\\Binom(n=1, p=0.3)$",
      "$\\Poisson(\\mu = 0.3)$",
      "$\\Poisson(\\mu = 0.7)$",
      "$\\Exp(\\lambda=0.3)$",
      Correct=2)
@
\end{enumerate}

Besides \verb!enumerate()!, several other functions produce randomized answer lists.  The
\verb!horiz()! function formats them horizontally on a single line.  The \verb!items()! function
is like \verb!enumerate()!, but only the \LaTeX\ \verb!\items! part of the enumeration is output:
it is assumed that the test writer has already entered \verb!\begin{enumerate}! or equivalent.
The \verb!things()! function just randomizes the items it is given; the test writer needs to
enter the \verb!\item! values if necessary.

The \pkg{Sweavetest} package also has special support for questions
involving R code. \verb!Renumerate()!, \verb!Rhoriz()! and 
\verb!Ritems()! format text to look like R input expressions. The 
\verb!resultenumerate()! and \verb!resultitems()! function evaluate the
arguments and format the output as if it was printed as output by R,
unless they are protected by being wrapped in the \verb!msg()! function.
For example, the input
\begin{verbatim}
 \item Which of the following gives the best approximation to 
 $\int_0^5 (x + 4) \cos(x) dx$?
 <<>>=
 Renumerate(Correct=2,
 "x <- runif(1000, 0, 5); mean((x + 4)*cos(x))",
 "x <- runif(1000, 0, 5); mean(5*(x + 4)*cos(x))",
 "x <- runif(1000, 0, 5); mean((x + 4)*cos(x)/5)",
 "x <- rcos(1000, 0, 5); mean(x + 4)",
 "42")
 @
\end{verbatim}
produces
\begin{enumerate}
\setcounter{enumi}{1}
\item Which of the following gives the best approximation to \\
 $\int_0^5 (x + 4) \cos(x) dx$?
<<>>=
 Renumerate(Correct=2,
 "x <- runif(1000, 0, 5); mean((x + 4)*cos(x))",
 "x <- runif(1000, 0, 5); mean(5*(x + 4)*cos(x))",
 "x <- runif(1000, 0, 5); mean((x + 4)*cos(x)/5)",
 "x <- rcos(1000, 0, 5); mean(x + 4)",
 "42")
@ 
\end{enumerate}
and 
\begin{verbatim}
 \item What will the following code produce?
 <<results=hide,echo=TRUE>>=
 x <- rep(c(TRUE, FALSE), 2)
 y <- rep(c(TRUE, FALSE), each=2)
 x & !y
 @
 <<>>=
 resultenumerate(Correct=1, KeepLast=1, x & !y, x & y,
 x | !y, x | y, msg("None of the above"))
 @
\end{verbatim}

\begin{enumerate}
\setcounter{enumi}{2}
\item What will the following code produce?
<<results=hide,echo=TRUE>>=
x <- rep(c(TRUE, FALSE), 2)
y <- rep(c(TRUE, FALSE), each=2)
x & !y
@
<<>>=
resultenumerate(Correct=1, KeepLast=1,
x & !y,
x & y,
x | !y,
x | y,
msg("None of the above"))
@
\end{enumerate}

If some question numbers are not used for multiple choice questions, then the test author can
manipulate the internal variables as follows.

[Adam, I need to have the current format of the internals before I can write this.]

\subsection{Introductory material at start of test}

Several functions and variables are included that are intended to be run or set 
at the start of a test.  These customize the behaviour of \pkg{Sweavetest}, and 
provide some common definitions that may be helpful in producing a test.

\begin{table}
\caption{Current math mode definitions provided by \texttt{newCommands()}.\label{tab:commands}}
\begin{center}
\begin{tabular}{lc}
\hline
Macro & Sample \\
\hline
<<>>=
n <- names(formals(newCommands))
for(i in n) {
  if (!(i %in% c("Marks", "thesection", "lowtilde")))
    cat("\\verb!\\", i, "! & $ \\", i, " $ \\\\ \n", sep="")
}
@
\hline
\end{tabular}
\end{center}
\end{table}
The \verb!newCommands()! function defines a number of \LaTeX\ macros that may be
convenient to use in the test.  Current definitions of simple macros
to use in mathematical expressions are shown in Table \ref{tab:commands}.  The function
also optionally defines \verb!\Marks!, which displays marks for a question in the right
margin, \verb!\thesection!, which suppresses section numbering, and \verb!\lowtilde!,
which draws a tilde under a math symbol, similar to the convention used on a blackboard
to indicate a vector.  By default, all macros are defined, but any of them
may be suppressed by passing \verb!FALSE! to the corresponding argument to 
\verb!newCommands()!.  For example,
this document uses \verb!newCommands(thesection = FALSE)!, because section headings
should not be overridden.

The \verb!marklist()! function outputs a box, suitable for recording marks on the
first page of a test.  For example,
<<marklist, echo=TRUE, eval=FALSE>>=
marklist(marks=rep(5,4), names=1:4)
@
produces the text and box shown in Figure \ref{fig:marklist}.
\begin{figure}
\begin{center}
<<>>=
<<marklist>>
@
\end{center}
\caption{Sample mark list produced by the \texttt{marklist()} function. \label{fig:marklist}}
\end{figure}

Similarly, the \verb!multiplechoice()! function produces a box
suitable for manually entering multiple choice answers.  This would be
used on a test that only had a few multiple choice questions (Figure \ref{fig:multiplechoice}).
\begin{figure}
\begin{center}
<<>>=
multiplechoice(1:10)
@
\end{center}
\caption{Multiple choice response box produced by \texttt{multiplechoice(1:10)}. \label{fig:multiplechoice}}
\end{figure}

\subsection{Producing an answer key}

A side effect of using the functions described in section \ref{sec:questions} is that information on the
randomization is saved
and is used to produce an answer key.  (This information is also used in the 
test analysis functions; see section \ref{sec:analysis}.) For example, the answer key from the questions
above is requested via

\noindent\verb!Answer key for version \Sexpr!\verb!{versioncodes[testversion]}:\\!
\begin{verbatim}
 <<>>=
 answerkey(symbols=LETTERS)
 @
\end{verbatim}
and displayed as \\

Answer key for version \Sexpr{versioncodes[testversion]}:\\
<<>>=
answerkey(symbols=LETTERS)
@

\section{Reading Student Responses}
\label{sec:reading}

\section{Analysis and Report}
\label{sec:analysis}

The report uses the \pkg{tables} package \citep{pkg:tables}.

\section{Cheating Detection}
\label{sec:cheating}

\begin{figure}
\begin{center}
<<fig=TRUE>>=
x <- 0:7
y <- 1:8
df <- expand.grid(x=x,y=y)
df$version <- with(df, 2*(y %% 2) + (x %% 2) + 1)
par(mar=c(0,0,0,0))
plot(y ~ x, pch = as.character(version), data=df, axes=FALSE,
      xlab=NULL, ylab=NULL, cex=1.2)
@
\caption{Seating pattern for four test versions to avoid having a student sit next
to another student with the same version. \label{fig:seating}}
\end{center}
\end{figure}

A common form of cheating on multiple choice tests is simply to copy the answers from a 
neighbour's or confederate's paper.  \pkg{Sweavetest} produces multiple versions of the tests
in order to make copying more difficult; with four test versions distributed in the pattern shown
in Figure \ref{fig:seating}, no student sits next to another student with the same version of the test.
The randomization functions described in section \ref{sec:questions} are designed so that
randomized answers in up to four different versions of the test end up different;  thus 
a student who copies from another student who has the correct answer will likely get the question
wrong.

To detect this kind of cheating, the \verb!wrongKey()! function re-marks each test using
all the other answer keys.  If a student has a higher score when marked with a different
answer key, it's a sign of either copying from a neighbour, or miscoding the answer key.


\section{Future Directions}

\pkg{Sweavetest} was originally developed by the first author (Murdoch) to support
his own teaching needs; only in 2012 was an attempt made to make it more generally useful,
so that others could use it.  There are still several changes planned to support this
direction.  
\begin{itemize}
\item The randomization of multiple choice items is designed for running four versions of the
tests.  Each version will have a different correct answer (unless the answer is one
of the unrandomized ones, such as ``none of the above'').  However, this scheme allows
a clever cheater to learn something by seeing what his/her neighbours have written, and
some instructors would prefer independent randomizations.

\item Not all instructors are comfortable with Sweave and \LaTeX.  Support for \pkg{odfWeave}
\citep{pkg:odfWeave}
or other schemes for test preparation will be considered.

\item We do not currently assign seating for students.  While we do record seating arrangements,
the records are on paper and are not normally digitized.   If these records were digitized, then
the cheating detection could look for correspondences between neighbouring students,
rather than between a student and the answer key for a different version of the test.
Even without those records, it could look for unusual correspondents between all pairs of 
students, albeit with reduced detection power.

\end{itemize}

\section*{Acknowledgments}

This research was supported by an NSERC Discovery Grant to the first author, and an
NSERC Undergraduate Summer Research Award to the second author.

\section{Not covered yet}

Update this list as we cover things.

Still need to document

 [1] "answerCorrelations"          "answerMatrix"       "answerPlots"        "clean"             
 [6]          "getglobal"          "grades"                              
[11]       "mergeLists"                         
[16] "nominalRoll"        "perms"                "readScanex"           
[26] "versioncodes"   


\bibliography{Sweavetest}

\end{document}
